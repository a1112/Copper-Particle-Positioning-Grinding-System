# Resource object code (Python 3)
# Created by: object code
# Created by: The Resource Compiler for Qt version 6.10.0
# WARNING! All changes made in this file will be lost!

from PySide6 import QtCore

qt_resource_data = b"\
\x00\x00\x0f\x86\
f\
rom __future__ i\
mport annotation\
s\x0d\x0a\x0d\x0aimport json\
\x0d\x0afrom pathlib i\
mport Path\x0d\x0afrom\
 typing import A\
ny\x0d\x0a\x0d\x0afrom PySid\
e6.QtCore import\
 QObject, Proper\
ty, Signal, Slot\
\x0d\x0afrom app.confi\
g import DEBUG a\
s _DEBUG_FLAG\x0d\x0a\x0d\
\x0a\x0d\x0aclass Setting\
sBridge(QObject)\
:\x0d\x0a    \x22\x22\x22\xe8\xae\xbe\xe7\xbd\xae\
\xe6\xa1\xa5\xef\xbc\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\xe9\
\x87\x8a\xef\xbc\x89\x0d\x0a\x0d\x0a    \xe8\xaf\xbb\
\xe5\x8f\x96/\xe4\xbf\x9d\xe5\xad\x98 UI \xe4\xbe\
\xa7\xe9\x85\x8d\xe7\xbd\xae\xef\xbc\x88API \xe4\xb8\
\xbb\xe6\x9c\xba\xe4\xb8\x8e\xe7\xab\xaf\xe5\x8f\xa3\xef\xbc\x89\
\xef\xbc\x8c\xe5\xb9\xb6\xe6\x8f\x90\xe4\xbe\x9b\xe4\xbf\xa1\xe5\
\x8f\xb7\xe9\x80\x9a\xe7\x9f\xa5\xe4\xb8\x8e\xe9\x87\x8d\xe5\x90\
\xaf\xe9\x92\xa9\xe5\xad\x90\xe3\x80\x82\x0d\x0a    \
\x22\x22\x22\x0d\x0a    apiPort\
Changed = Signal\
()\x0d\x0a    apiHostC\
hanged = Signal(\
)\x0d\x0a\x0d\x0a    def __i\
nit__(self, path\
: str | Path) ->\
 None:\x0d\x0a        \
super().__init__\
()\x0d\x0a        self\
._path = Path(pa\
th)\x0d\x0a        sel\
f._api_port = 80\
10\x0d\x0a        self\
._api_host = \x2212\
7.0.0.1\x22\x0d\x0a      \
  self._debug = \
bool(_DEBUG_FLAG\
)\x0d\x0a        self.\
load()\x0d\x0a        \
self._api_ctl = \
None\x0d\x0a\x0d\x0a    def \
load(self) -> No\
ne:\x0d\x0a        \x22\x22\x22\
\xe5\x8a\xa0\xe8\xbd\xbd\xe9\x85\x8d\xe7\xbd\xae\xe6\x96\x87\xe4\
\xbb\xb6\xef\xbc\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\xe9\x87\
\x8a\xef\xbc\x89\xe3\x80\x82\x22\x22\x22\x0d\x0a    \
    try:\x0d\x0a      \
      if self._p\
ath.exists():\x0d\x0a \
               d\
ata: dict[str, A\
ny] = json.loads\
(self._path.read\
_text(encoding=\x22\
utf-8\x22))\x0d\x0a      \
          port =\
 int(data.get(\x22a\
pi_port\x22, self._\
api_port))\x0d\x0a    \
            host\
 = str(data.get(\
\x22api_host\x22, self\
._api_host))\x0d\x0a  \
              ch\
anged = False\x0d\x0a \
               i\
f port != self._\
api_port:\x0d\x0a     \
               s\
elf._api_port = \
port\x0d\x0a          \
          self.a\
piPortChanged.em\
it()\x0d\x0a          \
          change\
d = True\x0d\x0a      \
          if hos\
t and host != se\
lf._api_host:\x0d\x0a \
                \
   self._api_hos\
t = host\x0d\x0a      \
              se\
lf.apiHostChange\
d.emit()\x0d\x0a      \
              ch\
anged = True\x0d\x0a  \
      except Exc\
eption:\x0d\x0a       \
     pass\x0d\x0a\x0d\x0a   \
 @Slot()\x0d\x0a    de\
f save(self) -> \
None:\x0d\x0a        \x22\
\x22\x22\xe4\xbf\x9d\xe5\xad\x98\xe9\x85\x8d\xe7\xbd\xae\xe6\x96\
\x87\xe4\xbb\xb6\xef\xbc\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\
\xe9\x87\x8a\xef\xbc\x89\xe3\x80\x82\x22\x22\x22\x0d\x0a  \
      try:\x0d\x0a    \
        self._pa\
th.parent.mkdir(\
parents=True, ex\
ist_ok=True)\x0d\x0a  \
          self._\
path.write_text(\
\x0d\x0a              \
  json.dumps({\x0d\x0a\
                \
    \x22api_port\x22: \
int(self._api_po\
rt),\x0d\x0a          \
          \x22api_h\
ost\x22: str(self._\
api_host),\x0d\x0a    \
            }, e\
nsure_ascii=Fals\
e, indent=2),\x0d\x0a \
               e\
ncoding=\x22utf-8\x22,\
\x0d\x0a            )\x0d\
\x0a        except \
Exception:\x0d\x0a    \
        pass\x0d\x0a\x0d\x0a\
    @Slot()\x0d\x0a   \
 def saveAndRest\
art(self) -> Non\
e:\x0d\x0a        \x22\x22\x22\xe4\
\xbf\x9d\xe5\xad\x98\xe5\xb9\xb6\xe8\xa7\xa6\xe5\x8f\x91 A\
PI \xe9\x87\x8d\xe5\x90\xaf\xef\xbc\x88\xe4\xb8\xad\xe6\
\x96\x87\xe6\xb3\xa8\xe9\x87\x8a\xef\xbc\x89\xe3\x80\x82\x22\x22\
\x22\x0d\x0a        self.\
save()\x0d\x0a        \
try:\x0d\x0a          \
  if self._api_c\
tl is not None:\x0d\
\x0a               \
 # _api_ctl expe\
cts .restart(app\
, port); app nee\
ds to be pre-bou\
nd.\x0d\x0a           \
     self._api_c\
tl(\x22restart\x22, in\
t(self._api_port\
))\x0d\x0a        exce\
pt Exception:\x0d\x0a \
           pass\x0d\
\x0a\x0d\x0a    @Property\
(int, notify=api\
PortChanged)\x0d\x0a  \
  def apiPort(se\
lf) -> int:  # t\
ype: ignore[over\
ride]\x0d\x0a        \x22\
\x22\x22API \xe7\xab\xaf\xe5\x8f\xa3\xef\xbc\x88\xe4\
\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\xe9\x87\x8a\xef\xbc\x89\xe3\x80\
\x82\x22\x22\x22\x0d\x0a        re\
turn int(self._a\
pi_port)\x0d\x0a\x0d\x0a    \
@apiPort.setter \
 # type: ignore[\
override]\x0d\x0a    d\
ef apiPort(self,\
 v: int) -> None\
:\x0d\x0a        try:\x0d\
\x0a            v =\
 int(v)\x0d\x0a       \
     if v != sel\
f._api_port and \
0 < v < 65536:\x0d\x0a\
                \
self._api_port =\
 v\x0d\x0a            \
    self.apiPort\
Changed.emit()\x0d\x0a\
        except E\
xception:\x0d\x0a     \
       pass\x0d\x0a\x0d\x0a \
   @Property(str\
, notify=apiHost\
Changed)\x0d\x0a    de\
f apiHost(self) \
-> str:  # type:\
 ignore[override\
]\x0d\x0a        \x22\x22\x22AP\
I \xe4\xb8\xbb\xe6\x9c\xba\xe5\x90\x8d/IP\xef\xbc\
\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\xe9\x87\x8a\xef\xbc\x89\
\xe3\x80\x82\x22\x22\x22\x0d\x0a        \
return str(self.\
_api_host)\x0d\x0a\x0d\x0a  \
  @apiHost.sette\
r  # type: ignor\
e[override]\x0d\x0a   \
 def apiHost(sel\
f, v: str) -> No\
ne:\x0d\x0a        try\
:\x0d\x0a            v\
 = str(v).strip(\
)\x0d\x0a            i\
f v and v != sel\
f._api_host:\x0d\x0a  \
              se\
lf._api_host = v\
\x0d\x0a              \
  self.apiHostCh\
anged.emit()\x0d\x0a  \
      except Exc\
eption:\x0d\x0a       \
     pass\x0d\x0a\x0d\x0a   \
 # Debug flag (r\
ead-only; from e\
nv via app.confi\
g)\x0d\x0a    @Propert\
y(bool, constant\
=True)\x0d\x0a    def \
debugEnabled(sel\
f) -> bool:  # t\
ype: ignore[over\
ride]\x0d\x0a        r\
eturn bool(self.\
_debug)\x0d\x0a\x0d\x0a    #\
 Attach a restar\
t hook from the \
host app\x0d\x0a    @S\
lot()\x0d\x0a    def c\
learController(s\
elf) -> None:\x0d\x0a \
       \x22\x22\x22\xe6\xb8\x85\xe9\x99\xa4\
\xe5\xb7\xb2\xe7\xbb\x91\xe5\xae\x9a\xe7\x9a\x84\xe6\x8e\xa7\xe5\
\x88\xb6\xe5\x99\xa8\xe9\x92\xa9\xe5\xad\x90\xef\xbc\x88\xe4\xb8\
\xad\xe6\x96\x87\xe6\xb3\xa8\xe9\x87\x8a\xef\xbc\x89\xe3\x80\x82\
\x22\x22\x22\x0d\x0a        sel\
f._api_ctl = Non\
e\x0d\x0a\x0d\x0a    def bin\
dController(self\
, hook) -> None:\
\x0d\x0a        \x22\x22\x22\xe7\xbb\x91\
\xe5\xae\x9a\xe6\x8e\xa7\xe5\x88\xb6\xe5\x99\xa8\xe9\x92\xa9\xe5\
\xad\x90\xef\xbc\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\xe9\x87\
\x8a\xef\xbc\x89\xe3\x80\x82\x0d\x0a\x0d\x0a     \
   \xe7\xba\xa6\xe5\xae\x9a\xef\xbc\x9ahook\
(action: str, po\
rt: int)\x0d\x0a      \
  \x22\x22\x22\x0d\x0a        s\
elf._api_ctl = h\
ook\x0d\x0a\
\x00\x00\x00\xf2\
\x22\
\x22\x22UI helpers re-\
exported under a\
pp.ui.src.* for \
clearer layout.\x0d\
\x0a\x0d\x0aThis package \
provides shim mo\
dules so imports\
 like\x0d\x0a`from app\
.ui.src.image_pr\
ovider import Ca\
meraImageProvide\
r`\x0d\x0awork without\
 changing the or\
iginal module lo\
cations.\x0d\x0a\x22\x22\x22\x0d\x0a\x0d\
\x0a\
\x00\x00\x06\xce\
f\
rom __future__ i\
mport annotation\
s\x0d\x0afrom PySide6.\
QtQuick import Q\
QuickImageProvid\
er\x0d\x0afrom PySide6\
.QtGui import QI\
mage\x0d\x0afrom threa\
ding import Lock\
\x0d\x0aimport numpy a\
s np\x0d\x0a\x0d\x0a\x0d\x0aclass \
CameraImageProvi\
der(QQuickImageP\
rovider):\x0d\x0a    \x22\
\x22\x22QML \xe5\x9b\xbe\xe5\x83\x8f\xe6\x8f\x90\xe4\
\xbe\x9b\xe8\x80\x85\xef\xbc\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\
\xa8\xe9\x87\x8a\xef\xbc\x89\x0d\x0a\x0d\x0a    \xe6\
\x8f\x90\xe4\xbe\x9b `image://c\
amera/...` \xe6\xba\x90\xe7\x9a\
\x84\xe5\x9b\xbe\xe5\x83\x8f\xe6\x95\xb0\xe6\x8d\xae\xef\xbc\x8c\
\xe5\x86\x85\xe9\x83\xa8\xe7\xbb\xb4\xe6\x8a\xa4\xe6\x9c\x80\xe5\
\x90\x8e\xe4\xb8\x80\xe5\xb8\xa7 QImage\xe3\
\x80\x82\x0d\x0a    \x22\x22\x22\x0d\x0a   \
 def __init__(se\
lf) -> None:\x0d\x0a  \
      super().__\
init__(QQuickIma\
geProvider.Image\
)\x0d\x0a        self.\
_lock = Lock()\x0d\x0a\
        self._im\
g: QImage | None\
 = None\x0d\x0a\x0d\x0a    d\
ef requestImage(\
self, id, size, \
requestedSize): \
 # type: ignore[\
override]\x0d\x0a     \
   \x22\x22\x22QML \xe8\xaf\xb7\xe6\xb1\x82\
\xe5\x9b\xbe\xe5\x83\x8f\xe5\x9b\x9e\xe8\xb0\x83\xef\xbc\x88\xe4\
\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\xe9\x87\x8a\xef\xbc\x89\xe3\x80\
\x82\xe8\x8b\xa5\xe6\x9a\x82\xe6\x97\xa0\xe5\xb8\xa7\xef\xbc\x8c\
\xe5\x88\x99\xe8\xbf\x94\xe5\x9b\x9e\xe7\x81\xb0\xe5\xba\x95\xe5\
\x9b\xbe\xe3\x80\x82\x22\x22\x22\x0d\x0a      \
  with self._loc\
k:\x0d\x0a            \
if self._img is \
None:\x0d\x0a         \
       img = QIm\
age(640, 360, QI\
mage.Format_RGB8\
88)\x0d\x0a           \
     img.fill(0x\
202020)\x0d\x0a       \
         if size\
 is not None:\x0d\x0a \
                \
   size.setWidth\
(img.width())\x0d\x0a \
                \
   size.setHeigh\
t(img.height())\x0d\
\x0a               \
 return img\x0d\x0a   \
         if size\
 is not None:\x0d\x0a \
               s\
ize.setWidth(sel\
f._img.width())\x0d\
\x0a               \
 size.setHeight(\
self._img.height\
())\x0d\x0a           \
 return self._im\
g\x0d\x0a\x0d\x0a    def set\
_frame(self, fra\
me: np.ndarray) \
-> None:\x0d\x0a      \
  \x22\x22\x22\xe8\xae\xbe\xe7\xbd\xae\xe5\xbd\x93\xe5\x89\
\x8d\xe5\xb8\xa7\xef\xbc\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\
\xe9\x87\x8a\xef\xbc\x89\xe3\x80\x82\x0d\x0a\x0d\x0a   \
     \xe6\x9c\x9f\xe6\x9c\x9b\xe8\xbe\x93\xe5\x85\
\xa5\xef\xbc\x9aBGR \xe6\xa0\xbc\xe5\xbc\x8f\xe3\x80\
\x81uint8\xe3\x80\x81\xe5\xbd\xa2\xe7\x8a\xb6 \
HxWx3\xe3\x80\x82\x0d\x0a      \
  \xe5\x86\x85\xe9\x83\xa8\xe8\xbd\xac\xe6\x8d\xa2\xe4\xb8\
\xba QImage \xe5\xb9\xb6\xe4\xbf\x9d\xe5\
\xad\x98\xe6\x8b\xb7\xe8\xb4\x9d\xe3\x80\x82\x0d\x0a   \
     \x22\x22\x22\x0d\x0a      \
  # \xe6\x9c\x9f\xe6\x9c\x9b BGR u\
int8 HxWx3\x0d\x0a    \
    if frame is \
None or frame.nd\
im != 3 or frame\
.shape[2] != 3:\x0d\
\x0a            ret\
urn\x0d\x0a        h, \
w, _ = frame.sha\
pe\x0d\x0a        rgb \
= frame[:, :, ::\
-1].copy()\x0d\x0a    \
    img = QImage\
(rgb.data, w, h,\
 3 * w, QImage.F\
ormat_RGB888)\x0d\x0a \
       with self\
._lock:\x0d\x0a       \
     self._img =\
 img.copy()\x0d\x0a\
\x00\x00\x08[\
f\
rom __future__ i\
mport annotation\
s\x0d\x0a\x0d\x0afrom PySide\
6.QtCore import \
QObject, Slot\x0d\x0af\
rom PySide6.QtGu\
i import QSyntax\
Highlighter, QTe\
xtCharFormat, QC\
olor\x0d\x0afrom PySid\
e6.QtQuick impor\
t QQuickTextDocu\
ment\x0d\x0aimport re\x0d\
\x0a\x0d\x0a\x0d\x0aclass Simpl\
eSyntaxHighlight\
er(QSyntaxHighli\
ghter):\x0d\x0a    \x22\x22\x22\
\xe7\xae\x80\xe5\x8d\x95 G/M \xe4\xbb\xa3\xe7\xa0\
\x81\xe9\xab\x98\xe4\xba\xae\xef\xbc\x88\xe4\xb8\xad\xe6\x96\x87\
\xe6\xb3\xa8\xe9\x87\x8a\xef\xbc\x89\xe3\x80\x82\x22\x22\x22\x0d\
\x0a    def __init_\
_(self, doc):\x0d\x0a \
       super()._\
_init__(doc)\x0d\x0a  \
      # Prepare \
text formats\x0d\x0a  \
      self.fmt_c\
md = QTextCharFo\
rmat()\x0d\x0a        \
self.fmt_cmd.set\
Foreground(QColo\
r('#6aa9ff'))  #\
 G/M codes\x0d\x0a\x0d\x0a  \
      self.fmt_a\
xis = QTextCharF\
ormat()\x0d\x0a       \
 self.fmt_axis.s\
etForeground(QCo\
lor('#ffd166')) \
 # X/Y/Z/F/S/T\x0d\x0a\
\x0d\x0a        self.f\
mt_comment = QTe\
xtCharFormat()\x0d\x0a\
        self.fmt\
_comment.setFore\
ground(QColor('#\
7d7d7d'))\x0d\x0a\x0d\x0a   \
     self._rx_cm\
d = re.compile(r\
\x22\x5cb([GM])\x5cd+\x5cb\x22)\
\x0d\x0a        self._\
rx_axis = re.com\
pile(r\x22\x5cb([XYZFS\
T])\x5cs*-?\x5cd+(?:\x5c.\
\x5cd+)?\x5cb\x22)\x0d\x0a     \
   self._rx_comm\
ent = re.compile\
(r\x22;.*$|\x5c((?:[^)\
]*)\x5c)\x22)\x0d\x0a\x0d\x0a    d\
ef highlightBloc\
k(self, text: st\
r) -> None:  # t\
ype: ignore[over\
ride]\x0d\x0a        \x22\
\x22\x22\xe9\x80\x90\xe8\xa1\x8c\xe9\xab\x98\xe4\xba\xae\xe8\xa7\
\x84\xe5\x88\x99\xef\xbc\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\
\xe9\x87\x8a\xef\xbc\x89\xe3\x80\x82\x22\x22\x22\x0d\x0a  \
      # Comments\
 first (they can\
 overlap others \
visually)\x0d\x0a     \
   for m in self\
._rx_comment.fin\
diter(text):\x0d\x0a  \
          self.s\
etFormat(m.start\
(), m.end() - m.\
start(), self.fm\
t_comment)\x0d\x0a    \
    # G/M comman\
ds\x0d\x0a        for \
m in self._rx_cm\
d.finditer(text)\
:\x0d\x0a            s\
elf.setFormat(m.\
start(), m.end()\
 - m.start(), se\
lf.fmt_cmd)\x0d\x0a   \
     # Axis/para\
ms\x0d\x0a        for \
m in self._rx_ax\
is.finditer(text\
):\x0d\x0a            \
self.setFormat(m\
.start(), m.end(\
) - m.start(), s\
elf.fmt_axis)\x0d\x0a\x0d\
\x0a\x0d\x0aclass Highlig\
hterBridge(QObje\
ct):\x0d\x0a    \x22\x22\x22\xe5\x90\x91\
 QML \xe6\x9a\xb4\xe9\x9c\xb2\xe7\x9a\x84\xe9\xab\
\x98\xe4\xba\xae\xe6\xa1\xa5\xe6\x8e\xa5\xe5\xaf\xb9\xe8\xb1\xa1\
\xef\xbc\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\xe9\x87\x8a\xef\
\xbc\x89\xe3\x80\x82\x22\x22\x22\x0d\x0a    de\
f __init__(self)\
 -> None:\x0d\x0a     \
   super().__ini\
t__()\x0d\x0a        s\
elf._hl = None\x0d\x0a\
\x0d\x0a    @Slot(QObj\
ect)\x0d\x0a    def at\
tach(self, doc_o\
bj: QObject) -> \
None:\x0d\x0a        \x22\
\x22\x22\xe5\xb0\x86\xe9\xab\x98\xe4\xba\xae\xe5\x99\xa8\xe9\x99\
\x84\xe7\x9d\x80\xe5\x88\xb0 QML \xe7\x9a\x84 \
TextArea \xe6\x96\x87\xe6\xa1\xa3\xef\
\xbc\x88\xe4\xb8\xad\xe6\x96\x87\xe6\xb3\xa8\xe9\x87\x8a\xef\xbc\
\x89\xe3\x80\x82\x22\x22\x22\x0d\x0a       \
 try:\x0d\x0a         \
   if not isinst\
ance(doc_obj, QQ\
uickTextDocument\
):\x0d\x0a            \
    return\x0d\x0a    \
        qdoc = d\
oc_obj.textDocum\
ent()\x0d\x0a         \
   self._hl = Si\
mpleSyntaxHighli\
ghter(qdoc)\x0d\x0a   \
     except Exce\
ption:\x0d\x0a        \
    pass\x0d\x0a\
\x00\x00\x07\xea\
\x00\
\x00\x1a\xf0x\xda\xadX\xed\x8f\xd3\xc8\x19\xff\x8e\xc4\xff\
0\x0d\x1fb\xb7\xc6\x1b\xd8\x13B\xa9\xb6\xea\xed\x16\x16\
\xa4\xeb\xb1o\x148\x8a\xa2Yg\x9c\xf8p<\xbe\xf1\
xIn\xb5R8\xa9\xe5\xa5\xd5\x96\xaa\x15'\xc1\x0a\
tm\xe9RUpU[q[\x8e;\xfe\x98\xdb$\
\xbb\x9f\xf8\x17\xfa\xcc\xd8N\xec\xd8I\xbc\xbb\x04\x94u\
\xfc\xbc\xfd\xe6\x99y\xde\xc6d\xb4\x81\x16Z\xcbV\x95\
\x9c\xd1\x17\xf9\x1ce\x04Y\x0d\x972\x8e\x16/\xad~\
J\x0c\xae\xa1e\x9b\xc2\xf7\x02\xa3.a\xbc\x05\xbf\xad\
\x9a\x83m\x0d-^f\xe2{\xc5j\x10v\xfc\x98)\
4\xf1\x96k9\xb5H\xc3%\x97[\x14XC\x22v\
]\xdd\x00\x03\xf0\xd5hD<+\x86;g[\xc4\x01\
\x0bK\x84\xb3\xd6\x02\xb5-\xa3%\xcdqj\xd0Hv\
\x00q\xde\xb7\xfa\x08/6p\x8d\x00\x84\x05\xab\xd9\xc0\
n\x8a5\xb1\x9a\xd9\x16'\x1f2\x86A\xf7\xe2\xaco\
\x9a\x02sHs\xfc\x86\xdbB\xd8C\x0e\xe88~\xcc\
\xb0\xb1\xe7\xa1Yl\xdc$NU\x09\xdd\xa0\x96\x8f\x1f\
C\xf0)\x14\x0a\x8b\xbf\xfc\x08u\x1el\xf6\xfe\xf9u\
\xf7\xabg\xef\xde\xdc\xdd\xddy\xd1}x\xa7\xfb\x9f\xe7\
\xfbw\xee\xbf{sO\xa8\x10\x9c\xbb\xdfm\xf5\xfe\xfc\
\xfc\xdd\x9bG\x9d\x07\x7fDB\xa6\xfb\xe8\xbf\xfb[\xff\
\xde{\xfb`\xef\xab\xdf\xf7\xee\xbf\xea\xb6o\xff\xd0\xbe\
\xdd\xfd\xf2Y\xe7\xed\x97\xf0\xd0{\xbc\xd3\xddz\xdd\xd9\
\xd9\xde\xdd\xd9\xecnnw\xee\xbe\xean>\xeb\xfc\xe1\
\xaf`\x00D:\xf7\x9fOu\x1e?\xd9\x7f\xfc\xaa\xf7\
\xe2\x1e\x18\xf9\xa1\xfdE\x1fO\xf0`\xd3\x9a7W\xc7\
N\x8dT\xd1L\xb8G\x8a\x1a\xd0<\x8e\xb9\x9fI\x0d\
\xe8Ub\xa2J\xc5r,^\xa9(\x1e\xb1M\x0dQ\
f\xd4\x89\xc7\x19\xe6\x94Ek\x97\xaa|8\x05\x8a\xaa\
\xf7\xd9\xd5\x18\x0d$\xf5\x8a\x00\x026\x22\x5c\x03B\x80\
B\x90.Vm2L\x8e\x1b\x04\x9e\xf8\xcfaE\xe2\
\xfcT\x0cyj\xca\xfdCv\xbd\x7f\x92n\x80\xf8\xc7\
\xd4!\xd9b\xd4q`;\xa5\x1b\xcec\xdb\xcb\xe6\x82\
5d.\xc1\xa5^\x85\x93&\x17\xc4\xab%t\xad\x84\
>)\xa1\x95R!\xed\x03\xe3f\xa5J\xe5JV\x98\
O2\xe9k\xd8\xf0\xfd\xc68\x0ep\x00uG\x01\x95\
\x1cu\xda\x90K\x19\xa9\xc2\x83\x80\x04o\x8f`1\x19\
n\x90\x8a\xcfl\xa0\x17\x8b)\x05\xd8\xe3\x01\xcb\x08\x8f\
r\x11\xfa@\x0br\x80<9j&\x8f.\xbe\xa9\xcf\
\xf5\xd0\xfdJD3n\x8e\x10\x80\xc3\xc2\xb8r\xaaT\
\x8a\xd1O\xa05\xcb\x83\xcdF\x8cx\xbe\xcd\xbd\x94d\
\x13\xb0\x9c<\xa5\x97R\x84\xd6(\x02\xaf\x03\xa5\x94A\
\xf0D\xa6\x8ah\x01\xf5\xe7Q\x0aT\xe0\x5cj\xc8\xa1\
\xdc2[3\xb1\xb8S\x07\xd1$\xde\x06\xfe\x88\xc5\x0e\
#\xdcgN,L\xc6kNDmLw\xf0~\xbc\
\xf6\x80'\xad\x7f\x95R{\xa2\x01\x11\x02sQ\x9c\x8c\
\xb7\x93\x8c\xa9\xc3xJh\xf8\x88\xd6r\x98\x01\xf9\xbe\
\x01Q\x93\x94\xa4O\x18_\xf2\x9d\x94\x1a\xc8\x8f\x9d7\
\xed\xce\xf6\xef\x82\xbc\x9bN\xd7\x90I\x0b\xe3r\x15(\
u\xa0\xa6\x0ds$|\xa7\x93\x86\xc5\x07\xe94\x03\x1d\
uG\x81\xbb\xbd\xd5}\xf1\x97\xc3\x82[\x06\xc5.\xa9\
\x1e\x1c\x9c\xdc\x17\xcb\xe11\x90\x9c\xd6j6\x99\x03O\
\x87%\xa0N=\xc8\xaf\x92S\x94\xc9\xb2\xe4O\xa2\xdf\
{\xfb\x04\xaa\xd4T\xf7\xe1\x0bp2\x14\xae\xbd\x97\xdf\
w\xfevg\xbf\xfdh\xef\xe5\xd7\x93Wc\x99\x99\xa7\
(fB|\xa0)\x18z#>P\xa2\xe1\x80\xa5\x0b\
B\x9a3\xc5\xa2\x1b6\xf5H\xbcp\x89\x8fiA\x11\
\xb1\xb3L\xe5\xab\x1e\x04~\xe5B\x9e\xc2#rsT\
\xbb\x14\xe1\xf4\xc0\xdf\x1a\x0a\x93\xe6\xcci\xbd\xa4\xe6Z\
W\x98\x5c\xd5\xdckH\xd6\x84\xe8\xe3\x8a\xde\x0b\xa8Q\
\x0f\x96\xa5\xd0\xc5-\x9bb\xa1Cr\xeb.\xb4KJ\
qa\xbe\xa8\xa1\xf5\x22\xf7\x8aeT\xda\xc8\x10\x83\xcc\
-\x0aZ\x1a;#\x9f\xf9P\xee\x94Po\xa2\x1bT\
\xd4\xf1+\x12\xd5\xfa'3\xc8,\xfc\xdaY:\xb7\xbc\
\x80\xd6m\xe2(\xc2\x92\xba\x81V\xa1\xed\xf3\x0aIq\
\xd24\x88\xcb\xd19\xf9G\xd4\x13h\xfdH9\xaf\x89\
sKKh\x9dl\x14\x0e{P\xc6Dh\x82%\x96\
.\x87C\xf8@\xe5\x02z\x96\x15hY\xc6'\xd8\xa8\
\xb1If\x09\x13\xb6\x02\xce\xa1\xfc\x13Og\x84/\xbb\
$,\x0d\x1aZ;\x8fE\xa2\x08\x99\xd7\xaePv3\
\xfc5\x9c-^~\xdf\xfb\xee\xe5~\xfbi\xe7\xf5\xdf\
se\x87:\xf60\xe7Ac\x91h\x10\xf5\x06\x15\x1b\
\xa7\xa1\x22`\x81\x1e\x07\xc0\x14\xd5\xa1\x1d\x1c%\xa4\xf7\
E\x14\x89<\x84<9A~\x1aV)\x0d\xe1\xa6\xe5\
\x85\x99\xb1j1\xd8gP\x9b\x95\x1e{_\xfc\x0f\x1a\
\xf7\xf7\xb5T\xb0\x9f\x7f\x91\x02\xac\x80\x19C\xa8!\xb9\
\xea\x99S\xa5D>\xc9\xe9gy\xbaR\xf6\x9b\x1a\x82\
\x81\xeas\xc8UQTgz<\xe8X\xd4\x0c\xec\xf1\
\x96\xda,\x5c]o\x96\xf5is\x03][o\x05\x0f\
\x9f\xac\x7f\x1e<\xac\xacs\xf9P\xc8Pr\xa0b,\
Z\xe6\xccJ,\xc7\xab\xf7\xb5Y\xc2J\xfe\xdd\x92\x98\
\xc6\xf4\x0f\x84\x8b#z\x89Y5+\xb3\x8b\x08\x22\xab\
\xf3\xcd\xb3\xddo_u6\x9f\xc2\xb9{\x9f\xf1u\x0b\
lW\xa84~\xb0(\x8b\x09\x8eY\x1d#&$\xeb\
z\xe6\x9e\xdc\xfd\xa6\xfb\xf0_\xe8\xf2\xc5\xc9\xcb9\x81\
>\xb4mzKN\xdaP\xbd\xc2z\x820\x08G\x16\
\x90\x87Mb\xb7\x0e\xd2,\x1d\xacq\x16\x13\xd7/`\
\xea\x9b\xd4\xf9\x87\xc3\xe1\x11\xac\xfcJ\xce\x8e9\xec\x04\
C\xe6\x11,\x9d\x13=f\x0eCrV=\x82\x9d\x0b\
b\x92\xcdaGN\xbcG\xb0\xb3\x1c\x0c\xc49,\x85\
\xa3\xf3\xe1\xaa\xae\x1c\x9b/3{\xbc\x9d\xfe\xfc\x9d\xb8\
\x89\x11cqJ\x0e\xc2\xb5Fx?\x5c!4c\xf3\
9t]b>W\x91\xe5\xc9\x87\xa1 \xb5\x1a\xe2:\
#\xb8.S\xce|P\xd2\xd0\xf4\x19\xf8\x0a^\xe8\xe7\
)k`^Y\x9a\x9f={\xf6\xac\x9a\x92\xd4M\xcb\
\xb6\x95R\xf3tI\xfc\xcb\xcc\xe1\x89\x8b\x02\x10\x19\xf0\
\xb8\x96\x98\xc9\xc3\x0b:]\xdc\xcf\x05 \x86\xe5bj\
?[\xc5B\xa4\x7f_\x17/\x1b\xab\xbe)i\xf2\xfe\
N\x01\xce$M\x87\x0dr\x94\x90\xac_a\x16'\x97\
\x1c\xbb\xa5&\xf0\xe8\x1e^#\x0ap\x83\x0b\x17>\x9e\
/\xaa\xe3.E\xccB\x15s\x5c\xb6\x04\xe8)\xd7\xa9\
\xfdt\x15{\xe4\xcc\x07\xda\xba\xec+\x05\x02\x9d\xd3Y\
\xf9\x0e\xbaT\xbdJ\x0cZ%J\x11{\x86e\x15\xd5\
\x8d\x83\x0cf'\xa0!\x85b\x08-\xa3IYx\xd3\
1e\x00\x14\x86\x91\x01\xa3\xc9*t\xd8\x22\xb3\xb9>\
d\xb2\xe0\xcaR\x22\xf5\x90rA\xbb\xa2Mk\xc8\x87\
\x0e\xe4\xac\x86f\xe7\x97\xd4\x11\xa9\xd6\xb0\x09f\xe7\x85\
TV\xb6\xed\xee\xfc\xa6\xf7\x8f\xd7\xdd\xadv\xe7\xc1\xe6\
\xeeN\xbb\xb3\xb3\x9dw\x22\xcd\xb8)\x8a5\xa0\x00\xb8\
\x22\x01\x07,\xe1\xf9\x95\xcfe\xe4\xb8\xbaS\xc5b\xa3\
\x87\xd1l>\xdfo\xdf\x0eW:\x0aKw\xebiw\
\xeb\xb1X\xf2\x94\x5c\xfd\xd4\x85\xe6\x95\xe6\xf40\xc8\xf4\
 f\x85\x11\x1a\x05\x0c\x02\x97\xcb\x17\x00\xc6j\xa0\x1f\
\xcd\xa0\xe9\xc1+\xaf\x8e]r\xfd\xf4\x0d\xf9\xba\x9c5\
\xd4\x88\x90N\xbe\xafk\xe8\x96\x86*\xe2\x08\x0dt$\
YN\xa09\xea\xac\x89)\x16\xe0\x9f\xfc\x19\xc4_\x92\
\xcej\xab\x91\xf8\xf5\xb2\x86\xc4\xff\xf2\xc9S7`\xcc\
s[\x8a:&\xc2AP\x17\xc7VB\x00 \xd3?\
\xbe\x95+\xd8\xb3\x839eox|\x1a\xf2\x88\x0b\xa3\
\xf9\xe0L'n\xecD#\xc3\x09\xf3\x12\x9dM\x85c\
\x06\x99-<\x15\xcd\xfe \xd1\xea?\xf1:$\xbe\xfe\
/y37n\xc0\xd8\xdb\xfe\xed\xde\xf6\xbd\xde\xb7\x7f\
\xea>\xd9\xca{\x8094\xb2\xd1]\xa16\xb8\x1c\xd4\
\x86\xaf\x03\x83~W\x02\x0a\x91\x1c\xaa\x9b\x08\x972\xa1\
\x86\x04\x8e\xb9:\xbe\x84\xf0\xe6\xd1\xd4_\x9b\xa0\xbeu\
4\xf5+\xc2U\x13L\xf0\xfa\xd1l,\x8b}\x98`\
#\xdc\xab\xff\x03'\xa9\x99\x05\
"

qt_resource_name = b"\
\x00\x03\
\x00\x00z\x83\
\x00s\
\x00r\x00c\
\x00\x12\
\x08\x0dZY\
\x00s\
\x00e\x00t\x00t\x00i\x00n\x00g\x00s\x00_\x00b\x00r\x00i\x00d\x00g\x00e\x00.\x00p\
\x00y\
\x00\x0b\
\x00o\xe5\xd9\
\x00_\
\x00_\x00i\x00n\x00i\x00t\x00_\x00_\x00.\x00p\x00y\
\x00\x11\
\x08\xa3\xa7\x99\
\x00i\
\x00m\x00a\x00g\x00e\x00_\x00p\x00r\x00o\x00v\x00i\x00d\x00e\x00r\x00.\x00p\x00y\
\
\x00\x0e\
\x00\x12\x11y\
\x00h\
\x00i\x00g\x00h\x00l\x00i\x00g\x00h\x00t\x00e\x00r\x00.\x00p\x00y\
\x00\x0d\
\x0f)\xf7\x99\
\x00q\
\x00m\x00l\x00_\x00b\x00r\x00i\x00d\x00g\x00e\x00.\x00p\x00y\
"

qt_resource_struct = b"\
\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\
\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x02\
\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00z\x00\x00\x00\x00\x00\x01\x00\x00\x17R\
\x00\x00\x01\x99\xce\x7f\x80\xcd\
\x00\x00\x006\x00\x00\x00\x00\x00\x01\x00\x00\x0f\x8a\
\x00\x00\x01\x99\xce\x7f\x80\xcd\
\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\
\x00\x00\x01\x99\xce\x7f\x80\xce\
\x00\x00\x00R\x00\x00\x00\x00\x00\x01\x00\x00\x10\x80\
\x00\x00\x01\x99\xce\x7f\x80\xce\
\x00\x00\x00\x9c\x00\x01\x00\x00\x00\x01\x00\x00\x1f\xb1\
\x00\x00\x01\x99\xce\x7f\x80\xce\
"

def qInitResources():
    QtCore.qRegisterResourceData(0x03, qt_resource_struct, qt_resource_name, qt_resource_data)

def qCleanupResources():
    QtCore.qUnregisterResourceData(0x03, qt_resource_struct, qt_resource_name, qt_resource_data)

qInitResources()
